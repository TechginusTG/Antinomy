/* ===== ChatSider Component Styles ===== */

.chat {
    height: 100%;
    display: flex;
    flex-direction: column;
}

.chat-header {
    display: flex;
    justify-content: space-around;
    align-items: center;
    padding: 0.75rem 0.25rem; /* 12px 16px */
    border-bottom: 2px solid var(--border-color);
    flex-shrink: 0; /* Prevent header from shrinking */
    background: var(--background-primary);
}

.chat-header :global(.ant-btn) {
    background: var(--background-tertiary);
    color: var(--text-primary);
    border: 2px solid var(--border-color);
}

.chat-log {
    flex-grow: 1; /* Grow to fill available space */
    overflow-y: auto; /* Enable vertical scroll on overflow */
    padding: 1rem; /* 16px */
    background: var(--background-primary);
}

.chat-log ul {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 0;
}

.chat-footer {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem; /* 12px 16px */
    border-top: 2px solid var(--border-color);
    flex-shrink: 0; /* Prevent footer from shrinking */
    gap: 0.5rem; /* Use gap for spacing between children */
    background: var(--background-secondary);
}

/* Bubble Component Styles */
.bubble {
    list-style: none;
    padding: 16px;
    margin-top: 8px;
    margin-bottom: 8px;
    border-radius: 50px;
    width: auto;
    max-width: 70%;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
    color: var(--text-primary);
}

.user {
    align-self: flex-end;
    background-color: var(--bubble-user-bg);
    border-bottom-right-radius: 0;
    text-align: end;
}

.ai {
    background-color: var(--bubble-ai-bg);
    font-style: italic;
}

.resetContainer {
    position: relative;
    width: 160px; /* Adjusted to accommodate both buttons */
    height: 32px; /* Assuming the button height is around 32px */
    overflow: hidden; /* Hide anything that overflows */
}

.resetText {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    background: var(--background-tertiary);
    color: var(--text-primary);
    border: 2px solid var(--border-color);
    border-radius: 6px; /* To match Ant Design button's default border-radius */
    cursor: default; /* Indicate it's not a clickable button */
    transition: opacity 0.3s ease, visibility 0.3s ease;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 1;
    visibility: visible;
}

.resetContainer:hover .resetText {
    opacity: 0;
    visibility: hidden;
}



/* Style for the hidden buttons container */
.hiddenButtons {
    position: absolute; /* Position it within the container */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: space-evenly; /* Distribute space between buttons */
    align-items: center;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    opacity: 0; /* Initially hidden */
    visibility: hidden; /* Initially hidden */
    pointer-events: none; /* Do not capture mouse events when hidden */
    background: var(--background-primary); /* Add background to cover the span */
    border-radius: 6px; /* Match the resetText border-radius */
}

/* When hovering over the container, show the hidden buttons */
.resetContainer:hover .hiddenButtons {
    opacity: 1;
    visibility: visible;
    pointer-events: auto; /* Enable mouse events when visible */
}